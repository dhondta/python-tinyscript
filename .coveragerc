[run]
cover_pylib = false
source = tinyscript
omit =
    */site-packages/*
    src/tinyscript/__main__.py
    src/tinyscript/hotkeys.py
    src/tinyscript/warnings.py
    src/tinyscript/helpers/termsize.py
    tests/*

[report]
exclude_lines =
    pragma: no cover
    # Python2/3 incompatibilities if/elif/else blocks
    (?m)(?P<indent>(?:\s+))if.*?PY(?:THON)?3.*?\:((?P=indent)\s+.*?)+(((?P=indent)else|elif).*?\:((?P=indent)\s+.*?)+)*$
    (if|and) (?:not )?PY(?:THON)?3:?
    if sys\.version_info \< \(3\,\)\:
    if pdf_generation:
    pdf_generation
    # __main__ logics
    if\s+__name__\s+==\s+(?P<q>(?:[\'\"]))__main__(?P=q)\s+:
    import ConfigParser
    except ImportError:
    except NameError:
    # sudo when using 'initialize'
    if sudo and not is_admin():
    # 'interact' module - remote interaction
    class ConsoleSocket
    class RemoteInteractiveConsole
    # exit tasks
    def __at_exit\(\)\:
    if DARWIN:
    if WINDOWS:
    raise NotImplementedError
    except NotImplementedError:
    # virtualenv package install
    elif line.startswith\(\"Successfully installed\"\):
    for top_level in __install
    def __deprecated
    def hotkeys(hotkeys, silent=True):
    super\(NewClass\, self\)\.__init__
    # optional packages not installed or different platform or cumbersome to test
    if not hotkeys_enabled:
    try:  # Windows
    def stdin_pipe\(\):
    Xlib.error.DisplayConnectionError
    def send_mail
    except KeyboardInterrupt:
